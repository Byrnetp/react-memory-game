{"version":3,"sources":["components/Navbar.js","components/Header.js","components/Tile.js","components/Board.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","props","react_default","a","createElement","id","message","score","topScore","Header","className","Tile","src","alt","onClick","update","Board","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","i","Tile_Tile","images","renderTile","React","Component","Footer","href","App","_this","call","state","clicked","bind","assertThisInitialized","e","clickTarget","target","indexOf","setState","length","concat","sort","b","Math","random","Navbar_Navbar","Header_Header","Board_Board","Footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d004741e.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const Navbar = (props) => {\r\n    return (\r\n        <nav>\r\n            <ul>\r\n                <li id=\"nav-message\">{props.message}</li>\r\n                <li id=\"nav-score\">Score: {props.score} | Top Score: {props.topScore}</li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nNavbar.propTypes = {\r\n    message: PropTypes.string.isRequired,\r\n    score: PropTypes.number.isRequired,\r\n    topScore: PropTypes.number.isRequired\r\n};","import React from 'react';\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <div className='header'>\r\n            <h1>Owl Memory Game</h1>\r\n            <h3>Try to click on each owl without clicking on any owl more than once!</h3>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const Tile = (props) => {\r\n    return (\r\n        <img\r\n            className='tile' \r\n            src={props.src}\r\n            alt={props.alt} \r\n            onClick={props.update} />\r\n    );\r\n}\r\n\r\nTile.propTypes = {\r\n    src: PropTypes.string.isRequired,\r\n    alt: PropTypes.string.isRequired,\r\n    update: PropTypes.func.isRequired\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Tile } from './Tile';\r\n\r\nexport class Board extends React.Component {\r\n    renderTile(i) {\r\n        return (\r\n            <Tile\r\n            src={this.props.images[i].src}\r\n            alt={this.props.images[i].alt}\r\n            update={this.props.update} />\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='board'>\r\n                <div className='board-row'>\r\n                    {this.renderTile(0)}\r\n                    {this.renderTile(1)}\r\n                    {this.renderTile(2)}\r\n                    {this.renderTile(3)}\r\n                </div>\r\n                <div className='board-row'>\r\n                    {this.renderTile(4)}\r\n                    {this.renderTile(5)}\r\n                    {this.renderTile(6)}\r\n                    {this.renderTile(7)}\r\n                </div>\r\n                <div className='board-row'>\r\n                    {this.renderTile(8)}\r\n                    {this.renderTile(9)}\r\n                    {this.renderTile(10)}\r\n                    {this.renderTile(11)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nBoard.propTypes = {\r\n    images: PropTypes.array.isRequired\r\n};","import React from 'react';\r\n\r\nexport const Footer = () => {\r\n  return (\r\n    <div id='footer'>\r\n        <ul>\r\n          <li>\r\n            <a href=\"https://github.com/Byrnetp/react-memory-game\">Github</a>\r\n          </li>\r\n          <li>\r\n              2020 Travis Byrne\r\n          </li>\r\n        </ul>\r\n    </div>\r\n  );\r\n}","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport { Navbar } from './components/Navbar';\nimport { Header } from './components/Header';\nimport { Board } from './components/Board';\nimport { Footer } from './components/Footer';\n\nlet images = [\n  {src: 'http://www.worldbirdsanctuary.org/wp-content/uploads/resident_owls_barnaby.png', alt: 'barnaby'},\n  {src: 'http://www.worldbirdsanctuary.org/wp-content/uploads/resident_owls_bogart.png', alt: 'bogart'},\n  {src: 'http://www.worldbirdsanctuary.org/wp-content/uploads/resident_owls_buzz.png', alt: 'buzz'},\n  {src: 'http://www.worldbirdsanctuary.org/wp-content/uploads/resident_owls_crystal.png', alt: 'crystal'},\n  {src: 'http://www.worldbirdsanctuary.org/wp-content/uploads/resident_owls_data.png', alt: 'data'},\n  {src: 'http://www.worldbirdsanctuary.org/wp-content/uploads/resident_owls_mia.png', alt: 'mia'},\n  {src: 'http://www.worldbirdsanctuary.org/wp-content/uploads/resident_owls_farnsworth.png', alt: 'farnsworth'},\n  {src: 'http://www.worldbirdsanctuary.org/wp-content/uploads/resident_owls_jasper.png', alt: 'jasper'},\n  {src: 'http://www.worldbirdsanctuary.org/wp-content/uploads/resident_owls_jersey.png', alt: 'jersey'},\n  {src: 'http://www.worldbirdsanctuary.org/wp-content/uploads/resident_owls_junior.png', alt: 'junior'},\n  {src: 'http://www.worldbirdsanctuary.org/wp-content/uploads/resident_owls_lief.png', alt: 'lief'},\n  {src: 'http://www.worldbirdsanctuary.org/wp-content/uploads/resident_owls_oliver.png', alt: 'oliver'}\n];\n\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      score: 0,\n      topScore: 0,\n      message: 'Click on any image to start!',\n      clicked: []\n    }\n    this.update = this.update.bind(this);\n  }\n\n  update(e) {\n    const clickTarget = e.target.alt;\n    if (this.state.clicked.indexOf(clickTarget) !== -1) {\n      this.setState({\n        score: 0,\n        message: 'Sorry, you chose incorrectly. try again!',\n        clicked: []\n      });\n    } else if (this.state.score === images.length - 1) {\n      this.setState({\n        score: 0,\n        topScore: this.state.topScore+1, \n        message: 'You Win! Click another owl to play again.',\n        clicked: []\n      });\n    } else if (this.state.score+1 > this.state.topScore) {\n      this.setState({\n        score: this.state.score+1,\n        topScore: this.state.topScore+1,\n        message: 'Nice job! You got a new high score!',\n        clicked: this.state.clicked.concat(clickTarget)\n      });\n    } else {\n      this.setState({\n        score: this.state.score+1,\n        message: 'Nice job!',\n        clicked: this.state.clicked.concat(clickTarget)\n      });\n    }\n  }\n\n  render() {\n    images = images.sort((a, b) => 0.5 - Math.random());\n    return (\n      <div className=\"App\">\n        <Navbar \n          score={this.state.score} \n          topScore={this.state.topScore} \n          message={this.state.message} />\n        <Header />\n        <Board \n          images={images}\n          update={this.update} />\n        <Footer />\n      </div>\n    );\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}